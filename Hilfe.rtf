{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1031\deflangfe1031{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f28\froman\fcharset238\fprq2 Times New Roman CE;}{\f29\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f31\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f32\froman\fcharset162\fprq2 Times New Roman Tur;}{\f33\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f34\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f35\froman\fcharset186\fprq2 Times New Roman Baltic;}
{\f36\fswiss\fcharset238\fprq2 Arial CE;}{\f37\fswiss\fcharset204\fprq2 Arial Cyr;}{\f39\fswiss\fcharset161\fprq2 Arial Greek;}{\f40\fswiss\fcharset162\fprq2 Arial Tur;}{\f41\fswiss\fcharset177\fprq2 Arial (Hebrew);}
{\f42\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f43\fswiss\fcharset186\fprq2 Arial Baltic;}{\f44\fmodern\fcharset238\fprq1 Courier New CE;}{\f45\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f47\fmodern\fcharset161\fprq1 Courier New Greek;}
{\f48\fmodern\fcharset162\fprq1 Courier New Tur;}{\f49\fmodern\fcharset177\fprq1 Courier New (Hebrew);}{\f50\fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f51\fmodern\fcharset186\fprq1 Courier New Baltic;}}{\colortbl;\red0\green0\blue0;
\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;
\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1031\langfe1031\cgrid\langnp1031\langfenp1031 \snext0 Normal;}
{\*\cs10 \additive Default Paragraph Font;}}{\info{\author .}{\operator .}{\creatim\yr2018\mo6\dy14\hr17\min20}{\revtim\yr2018\mo6\dy14\hr17\min23}{\version2}{\edmins0}{\nofpages4}{\nofwords1826}{\nofchars10412}{\nofcharsws12786}{\vern8243}}
\margl1417\margr1417\margt1417\margb1134 \widowctrl\ftnbj\aenddoc\hyphhotz425\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3
\jcompress\viewkind4\viewscale100\nolnhtadjtbl \fet0\sectd \linex0\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang
{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7
\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain 
\ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1031\langfe1031\cgrid\langnp1031\langfenp1031 {\b\f1\fs28\cf2 Allgemeines}{\f1\fs20\cf2 
\par }{\f1\fs20 
\par Eine RtfBook-Datei (*.rbk) ist ein eBook, bei dem ein oder viele RTF-Dateien, die in eine ZIP-Datei gepackt wurden. Das ist schon das Wesentliche, nur dass die ZIP-Datei die Endung *.rbk bekommt. Das Format \'e4hne
lt also sehr dem ComikBook-Format *.CBZ (*.CBR usw.), nur dass RtfBook eher Texte und begleitende Bilder enth\'e4lt, w\'e4hrend ComicBook nur f\'fcr Bilder (*.jpg, *.png) gedacht ist.
\par 
\par Das Buch wird in 3 Schritten in wenigen Minuten mit kostenlos verf\'fcgbaren Tools erstellt:
\par 
\par }\pard \ql \fi-284\li284\ri0\nowidctlpar\tx284\faauto\rin0\lin284\itap0 {\f1\fs20 1.\tab Ein oder mehrere Kapitel schreiben und als je eine RTF-Datei abspeichern. Daf\'fcr gen\'fcgt Windows-Wordpad v\'f6llig.
\par 2.\tab Alle RTF-Textdateien in eine gemeinsame ZIP-Datei verpacken. Zum Beispiel mit WinZip, WinRar, 7zip oder dem Total Commander.
\par 3.\tab Die erzeugte Archivdatei von *.zip in *.rbk umbenennen.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f1\fs20 
\par Fertig. In einer RtfBook-Datei stellt jede RTF-Datei ein Kapitel dar, wobei jede einzelne Datei jeweils automatisch zu einem Eintrag im Inhaltsverzeichnis wird. Kopiert mal also 20 RTF-Dateien in eine RtfBook-Datei, wird das Inhaltsverzeichnis 20 Eintr
\'e4ge enthalten.
\par 
\par Zus\'e4tzlich zu RTF-Dateien sind Textdateien (*.txt) sowie Bilddateien im JPEG- und PNG-Format erlaubt.
\par Das RtfBook-Format entstand, weil die vergleichbaren ePub-Dateien umst\'e4ndlich in der Herstellung sind (das geht nicht mal eben nebenbei) und noch umst\'e4ndlicher zu erweitern. F\'fc
r meinen eigenen Archivierungszweck brauchte ich etwas Bequemes und Komfortables. Geplant war zudem, f\'fcr das Format sp\'e4ter einen echten Outliner zu programmi
eren, der in etwa wie die bekannten Programme KeyNote, WinGuide und TreePad aufgebaut sein sollte, aber mit einem offenen und einfach handhabbaren Dateiformat, das quer \'fc
ber alle Systeme und auf unabsehbare Zeit ohne Weiteres lesbar ist. - Und RTF-Dateien in einer ZIP-Datei sind wohl zweifelsfrei eine kompatible Sache ;-)
\par 
\par }{\b\f1\fs28\cf2 Reihenfolge der Kapitel bestimmen}{\f1\fs20\cf2 
\par }{\f1\fs20 
\par Die Kapitel werden im Inhaltsverzeichnis alphabetisch sortiert. Um gezielt eine bestimmte Reihenfolge herzustellen, setzt man dem Namen der RTF-Dateien eine Ordnungszahl voran, zB.:
\par 
\par }\pard \ql \li284\ri0\nowidctlpar\faauto\rin0\lin284\itap0 {\f2\fs20 001 Einf\'fchrung.rtf
\par 003 Das zweite Kapitel.rtf
\par 002 Das erste Kapitel.rtf
\par 004 Das letzte Kapitel.rtf}{\f1\fs20 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f1\fs20 
\par Die Anzahl der Ziffern pro Ordnungszahl ist egal, bei bis zu 99 Eintr\'e4gen im Inhaltsverzeichnis sollte man sinnvollerweise eine zweistellige Ordnungszahl verwenden. Es d\'fc
rfen Ordnungszahlen ausgelassen werden; nur die alphabetische Reihenfolge ist wichtig. F\'fchrende Nullen sind bei den niedrigen Ordnungszahlen Pflicht, weil sonst die alphabetische Sortierung fehlgeht. Die vorangesetzten Ordnungszahlen einschlie\'df
lich erstem Leerzeichen werden im Inhaltsverzeichnis ausgeblendet, bleiben f\'fcr den Leser des eBooks also unsichtbar. Die Dateiendung wird ebenfalls weggelassen. Das Inhaltsverzeichnis wird in unserem Beispiel also wie folgt aussehen:
\par 
\par \u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d
\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d
\par }\pard \ql \li284\ri0\nowidctlpar\faauto\rin0\lin284\itap0 {\f1\fs20 Einf\'fchrung
\par Das erste Kapitel
\par Das zweite Kapitel
\par Das letzte Kapitel
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f1\fs20 \u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d
\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d
\par 
\par }{\b\f1\fs28\cf2 Kapitel-Hierarchie erzeugen}{\f1\fs20\cf2 
\par }{\f1\fs20 
\par Zus\'e4tzlich zur Reihenfolge kann eine Hierarchie der Kapitel im Inhaltsverzeichnis erzeugt werden. Dazu f\'fcgt man der Ordnungszahl einen Bindestrich und eine einstellige Ziffer an, welche die Hierarchieebene angibt. Hier ein Beispiel.
\par 
\par }\pard \ql \li284\ri0\nowidctlpar\faauto\rin0\lin284\itap0 {\f2\fs20 001 Einf\'fchrung.rtf
\par 002 Das erste Kapitel.rtf
\par 003 Das zweite Kapitel.rtf
\par 004-1 Unterkapitel auf Ebene 1.rtf
\par 005-1 Unterkapitel auf Ebene 1.rtf
\par 006-2 Unterkapitel auf Ebene 2.rtf
\par 007-2 Unterkapitel auf Ebene 2.rtf
\par 008 Das letzte Kapitel.rtf}{\f1\fs20 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f1\fs20 
\par Das Weglassen der Hierarchieangabe ist gleichbedeutend mit Ebene 0 dh. }{\f2\fs20 001 Einf\'fchrung.rtf}{\f1\fs20  enspricht }{\f2\fs20 001-0 Einf\'fchrung.rtf}{\f1\fs20  . Die vorangegangene Liste erzeugt folgende Hierarchie:
\par 
\par \u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d
\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d
\par }\pard \ql \li284\ri0\nowidctlpar\faauto\rin0\lin284\itap0 {\f1\fs20 Einf\'fchrung
\par Das erste Kapitel
\par Das zweite Kapitel
\par }\pard \ql \li426\ri0\nowidctlpar\faauto\rin0\lin426\itap0 {\f1\fs20 Unterkapitel auf Ebene 1
\par Unterkapitel auf Ebene 1
\par }\pard \ql \li568\ri0\nowidctlpar\faauto\rin0\lin568\itap0 {\f1\fs20 Unterkapitel auf Ebene 2
\par Unterkapitel auf Ebene 2
\par }\pard \ql \li284\ri0\nowidctlpar\faauto\rin0\lin284\itap0 {\f1\fs20 Das letzte Kapitel
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f1\fs20 \u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d
\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d
\par 
\par Hat eine Datei denselben Dateinamen und dieselbe Hierarchieebene wie die vorangegangene Datei, und nur die Ordnungszahl ist um Eins h\'f6
her, dann wird diese Datei als Fortsetzung des vorangegangenen Kapitels betrachtet. Das kann zum Beispiel sinnvoll sein, um zu gro\'dfe Dateien zu vermeiden oder wenn Bilddateien eingef\'fcgt werden (dazu weiter unten).
\par 
\par }{\b\f1\fs28\cf2 Verwendung einer Indexdatei }{\b\f2\fs28\cf2 #index.txt}{\f1\fs20\cf2 
\par }{\f1\fs20 
\par Die Angabe der Kapitelnamen und -hierarchie direkt in den Dateinamen ist der einfachste Weg und wird in den meisten F\'e4llen ausreichend sein. Allerdings sind in Dateinamen bestimmte Zeichen unzul\'e4ssig, und zwar < > ? " : | \\
 / *. Zudem gibt es reservierte Dateinamen wie COM1, COM2 ... LPT1 ... CON, PRN, AUX, NUL, die f\'fcr Ger\'e4te verwendet werden, und das Zeichen & kann zumindest problematisch sein. Um Schwieigkeiten mit solchen F\'e4
llen zu umgehen, kann die Liste der Kapitelnamen in eine Indexdatei }{\b\f2\fs20 #index.txt}{\f1\fs20  gesetzt werden.
\par Die Verwendung einer Indexdatei kann auch bei verschl\'fcsselten RtfBook-Dateien sinnvoll sein, weil dort die normalen Dateinamen unverschl\'fcsselt bleiben und die Dateinamen durchaus R\'fcckschl\'fcsse auf den Inhalt des Buchs zulassen k\'f6nnten.

\par Und schlie\'dflich kann es einfacher sein, zu einem sp\'e4teren Zeitpunkt neue Kapitel an beliebiger Stelle einzuf\'fcgen, wenn man das in einer Textdatei tut, statt u.U. die Ordnungszahlen aller nachfolgenden Dateinamen aktualisieren zu m\'fc
ssen (Tip: Im Total Commander geht so etwas \'fcber das Men\'fc "Dateien"\u8594\'3f"Datei-Umbenenn-Tool" sehr komfortabel).
\par Die Indexdatei }{\b\f2\fs20 #index.txt}{\f1\fs20  ist eine einfache Textdatei, welche Sonderzeichen >ASCII-127 im UTF-8-Format codiert und mit einer BOM (ByteOrderMark, 3 Bytes und zwar \'ef\'bb\'bf) beginnt. Solche Textdateien k\'f6
nnen mit dem normalen Windows-Texteditor }{\f2\fs20 notepad.exe}{\f1\fs20  erzeugt werden, wenn man bei "Speichern unter..." als Codierung "UTF-8" ausw\'e4
hlt. Durch das UTF-8-Format ist weltweit eine eindeutige Kodierung der Sonderzeichen, sowie eine problemlose Verwendung fremder Schriftzeichen m\'f6glich. Die Indexdatei }{\i\f1\fs20 muss}{\f1\fs20  zwingend den Dateinamen }{\b\f2\fs20 #index.txt}{
\f1\fs20  haben und hat exakt den Aufbau. wie die oben schon als Beispiel gezeigten Dateinamen, nur dass die Dateiliste diesmal in der Indexdatei }{\b\f2\fs20 #index.txt}{\f1\fs20  steht, das hei\'dft in unserem Beispiel:
\par 
\par }\pard \ql \li284\ri0\nowidctlpar\faauto\rin0\lin284\itap0 {\f2\fs20 001 Einf\'fchrung.rtf
\par 002 Das erste Kapitel.rtf
\par 003 Das zweite Kapitel.rtf
\par 004-1 Unterkapitel auf Ebene 1.rtf
\par 005-1 Unterkapitel auf Ebene 1.rtf
\par 006-2 Unterkapitel auf Ebene 2.rtf
\par 007-2 Unterkapitel auf Ebene 2.rtf
\par 008 Das letzte Kapitel.rtf}{\f1\fs20 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f1\fs20 
\par Die echten Dateinamen haben in diesem Fall die Dateinamen }{\f2\fs20 001}{\f1\fs20 , }{\f2\fs20 002}{\f1\fs20 , }{\f2\fs20 003}{\f1\fs20 , }{\f2\fs20 004}{\f1\fs20 , }{\f2\fs20 005}{\f1\fs20 , }{\f2\fs20 006}{\f1\fs20 , }{\f2\fs20 007}{\f1\fs20  und }{
\f2\fs20 008}{\f1\fs20 , also eine reine Ziffer mit f\'fc
hrenden Nullen ohne (!) Hierarchieangabe und ohne (!) Dateisuffix. Der RtfBook-Reader wird in jeder Zeile der Dateiliste die linken Ziffern bis zum ersten Nicht-Ziffern-Zeichen auslesen und nach einer Datei mit diesem Dateinamen suchen. Ansonsten werden d
ie Zeilen der Indexdatei exakt so ausgewertet, wie dies oben schon mit den Dateinamen beschrieben worden ist. Eigentlich ist es also wirklich nicht mehr, als eine Verlagerung aller Dateinamen in die Indexdatei }{\b\f2\fs20 #index.txt}{\f1\fs20 
, wobei die Ordnungszahl dann auch de
r echte Dateinamen ist. Der einzige beachtenswerte Unterschied ist, dass die Reihenfolge der Kapitel im Inhaltsverzeichnis in diesem Fall (bei der Verwendung einer Indexdatei) der Reihenfolge der Dateien in der Liste folgt, also }{\i\f1\fs20 nicht}{
\f1\fs20  der alphabetischen Sortierung. Anderenfalls w\'e4re das einfache nachtr\'e4gliche Einf\'fcgen von Kapiteln nicht m\'f6glich. Die Dateinummern k\'f6nnen deshalb (bei der Verwendung einer Indexdatei) auch beliebig sein, so kann }{\f2\fs20 001}{
\f1\fs20  zum Beispiel }{\f2\fs20 004}{\f1\fs20 , folgen, danach kommt }{\f2\fs20 002}{\f1\fs20  und so weiter.
\par 
\par }{\b\f1\fs28\cf2 Zul\'e4ssige Dateitypen, Bilddateien und Attachements}{\f1\fs20\cf2 
\par }{\f1\fs20 
\par Neben RTF-Dateien sind Bilddateien im PNG- und JPEG-Format, als EMF-Vektorgrafik und Bin\'e4r-Attachements zul\'e4ssig.
\par Bei den Bilddateien sollte man auf vern\'fcnftige Datei- und Bildgr\'f6\'dfen achten, die keine h\'f6here Qualit\'e4t haben, als sie auf dem Bildschirm tats\'e4
chlich sinnvoll ist. Braucht man aber eine hochqualitative Bilddatei, etwa als Autor, der sein Material an einen Lektor/Redakteur weitergibt, empfiehlt es sich, eine Bildversion in pragmatischer Qualit\'e4t f\'fcr die Bildschirmanzeige einzuf\'fc
gen und eine zweite Bildversion als Bin\'e4r-Attachement, indem man dem Dateinamen einen weiteren Suffix wie zB. }{\f2\fs20 *.bin}{\f1\fs20  anh\'e4ngt, also zB. beim anzuzeigenden Bild }{\f2\fs20 MeinBild.jpg}{\f1\fs20  zus\'e4tzlich die Datei }{
\f2\fs20 MeinBild_HiRes.png.bin}{\f1\fs20 . Bin\'e4r-Attachements sind beliebige Dateien, die nicht RTF, JPEG oder PNG sind und deren einzige Funktion es ist, \'fcber "Speichern als..." extrahiert werden zu k\'f6nnen. Eine gesonderte \'dc
berschrift ist bei Bin\'e4r-Attachements nicht vorgesehen. Sollte ein Kommentar n\'f6tig sein, muss dieser im Kapitel davor oder dahinter eingef\'fcgt werden.
\par 
\par }{\b\f1\fs28\cf2 Eingebettete Bilder}{\f1\fs20\cf2 
\par }{\f1\fs20 
\par Mitten im Text eingebettete Bilder sind nur als EMF-Vektorgrafiken und unkomprimierte (!) Bitmaps zul\'e4ssig. Vektorgrafiken stellen in der Regel kein Problem dar, w\'e4hrend man bei Bitmaps sehr darauf achten sollte, nicht zu gro\'df
e Bilder einzubetten. Zum Beispiel sollte man keine Vollfarb-Bitmap (24 Bit pro Pxel) erstellen, wenn eine mit 16 Farben (4 Bit pro Pixel) gen\'fcgt. Das Einf\'fcgen sollte zudem nicht \'fcber die Zwischenab
lage erfolgen, wo die Farbtiefe eventuell wieder ver\'e4ndert wird, sondern als Datei. Das macht man bei Winword \'fcber das Men\'fc "Einf\'fcgen"\u8594\'3f"Grafik"\u8594\'3f"Grafik aus Datei..." bzw. bei Wordpad \'fcber das Men\'fc "Einf\'fcgen"\u8594
\'3f"Objekt..."\u8594\'3f"Aus Datei erstellen..." bzw. bei LibreOffice sWriter \'fcber das Men\'fc "Einf\'fcgen"\u8594\'3f"Bild". Man sollte auch nicht zu viele Bilder in einem Kapitel (einer RTF-Datei) einbetten.
\par Wie auch immer: Am sinnvollsten ist es, Pixel-Bilder als separate PNG-, JPEG-Dateien abzulegen. Bei EMF-Vektorbildern ist
 das Einbetten innerhalb einer RTF-Datei aber meist unproblematisch. Ein Tip: Zum Erzeugen von EMF-Grafikdateien aus EMF-Bildern aus der Zwischenablage empfehle ich mein eigenes Tool }{\f2\fs20 MetaView.exe}{\f1\fs20 , das nur 20KB gro\'df
 ist, aber im Gegensatz zu den meisten EMF-f\'e4higen Tools in der Lage ist, EMF-Grafikdateien ohne Weiteres mit korrektem Seitenverh\'e4ltnis zu erzeugen. Mit }{\f2\fs20 MetaView.exe}{\f1\fs20 
 lassen sich zum Beispiel Diagramme aus Office, Visio usw. sehr bequem \'fcber die Zwischenablage als separate EMF-Dateien extrahieren.
\par 
\par }{\b\f1\fs28\cf2 Verschl\'fcsselte eBooks}{\f1\fs20\cf2 
\par }{\f1\fs20 
\par - haupts\'e4chlich, weil das Format auch f\'fcr ein Outliner-Programm verwendet wird, aber durchaus auch sinnvoll einsetzbar, wenn man eBooks auf einem USB-Stick transportiert, als Kindersicherung usw..................................
\par 
\par }{\b\f1\fs28\cf2 Metadaten in der Datei }{\b\f2\fs28\cf2 #meta.txt}{\f1\fs20\cf2 
\par }{\f1\fs20 
\par Bei Bedarf k\'f6nnen (keine Pflicht) Metadaten zum eBook bereitgestellt werden, die Angaben enthalten, wie Buchtitel, Autor, Erscheinungsdatum usw. Diese Daten werden in der Datei }{\f2\fs20 #meta.txt}{\f1\fs20  im Textformat gespeichert. Wie die I
ndexdatei }{\b\f2\fs20 #index.txt}{\f1\fs20  m\'fcssen Sonderzeichen >ASCII-127 auch in dieser Datei im UTF-8-Format codiert werden und die Datei }{\f2\fs20 #meta.txt}{\f1\fs20  muss mit einer BOM (ByteOrderMark, 3 Bytes und zwar \'ef\'bb\'bf
) beginnen. Wenn die Meta-Informationen f\'fcr extrene Indizierungs- und Suchprogramme auslesbar sein sollen, dann sollte die Datei }{\f2\fs20 #meta.txt}{\f1\fs20 
 die erste Datei im ZIP-Archiv der *.rbk-Datei sein, und sie sollte unkomprimiert und unverschl\'fcsselt sein. Welche Metadaten man anbietet, ist jedem freigestellt, aber zumindest Titel, Autor, Datum der Erstver\'f6
ffentlichung und Sprache sind empfehlenswert.
\par Es ist m\'f6glich, ein Element bei Bedarf mehrfach zu verwenden, zum Beispiel bei mehreren Autoren oder mehreren Suchbegriffen.
\par Die Mata-Datei verwendet DublinCore-IDs zum Codieren der Metadaten in einem vereinfachte Verfahren, wie hier im Beispiel gezeigt. Ein Zeilenwechsel schlie\'dft die Anbage jeweils ab. Mehrzeilige Eintr\'e4
ge (zB. bei der Beschreibung) sind durch mehrfache Verwendung des gleichen Elements m\'f6glich:
\par 
\par \u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d
\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d

\par }{\f2\fs18 title: \'dcber die spezielle und die allgemeine Relativit\'e4tstheorie
\par subtitle:
\par creator: Einstein, Albert
\par }{\f2\fs18\lang2057\langfe1031\langnp2057 translator: Carl Berg
\par contributor: 
\par }{\f2\fs18\lang1036\langfe1031\langnp1036 subject: science
\par subject: physics
\par language: de
\par }{\f2\fs18 publisher: Springer Berlin Heidelberg
\par }{\f2\fs18\lang2057\langfe1031\langnp2057 publication: 2009
\par creation: 1920
\par modification: 2017-01-31
\par description: 
\par rights: 
\par ISBN: 978-3-540-87776-9
\par DOI: 10.1007/978-3-540-87777-6
\par Open Library: OL1234567890
\par }{\f1\fs20 \u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d
\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d\u9472\'2d
\u9472\'2d
\par 
\par Dar\'fcber hinaus kann bei Bedarf f\'fcr jede RTF-, Bild- oder Attachement-Datei eine eigene Metadatei angelegt werden, die den gleichen Namenpr\'e4fix (exakt, dh. einschlie\'df
lich Ordnungsnummer und Hierarchieangabe), aber den Namessuffix *.txt hat. Es gelten dieselben Regeln wie f\'fcr die Datei }{\f2\fs20 #meta.txt}{\f1\fs20 . Mit diesen Metadaten ist eine RtfBook-Datei als Kartei oder Archivierungssystem f\'fc
r diverse Zwecke verwendbar. Solche Metadateien werden im Inhaltsverzeichnis nicht als Datei angezeigt, sondern werden nur indirekt ausgewertet.
\par 
\par }{\b\f1\fs28\cf2 Weitere Hinweise und Tips}{\f1\fs20\cf2 
\par }{\f1\fs20 
\par - Speichern unter Wordpad, um Datei kleiner zu machen
\par - JPEG Optimizer oder GIMP f\'fcr JPEG
\par 
\par 
\par }}